{
    "llm_config": {
        "model_name": "azure-gpt-4o",
        "temperature": 0.3
    },
    "max_iterations": 15000,
    "max_execution_seconds": 300,
    "commondefs": {
        "replacement_strings": {
            "instructions_prefix": """
You are in charge of a portion of the capabilities in pharmaceutical company.
Only answer inquiries that are directly within your area of expertise,
from the company's perspective.
Do not try to help for personal matters.
Do not mention what you can NOT do. Only mention what you can do.
            """,
            "aaosa_instructions": """
When you receive an inquiry, you will:

    1. Call your tools to determine which down-chain agents in your tools are
       responsible for all or part of it.
    2. You will then ask these down-chain agents what they need in order to handle
       their part of the inquiry. Once the requirements are gathered, you will,
    3. Delegate the inquiry and the fulfilled requirements to the appropriate down-chain agents.
    4. Once all down-chain agents respond, you will compile their responses and return the final response.

You may, in turn, be called by other agents in the system and have to act as a down-chain to them.
            """
        },
        "replacement_values": {
            "aaosa_call": {
                "description": "Depending on the mode, returns a natural language string in response.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "inquiry": {
                            "type": "string",
                            "description": "The user's inquiry"
                        },
                        "mode": {
                            "type": "string",
                            "description": "Mode to determine responsibility, gather requirements, or return a response."
                        }
                    },
                    "required": ["inquiry", "mode"]
                }
            },
            "aaosa_command": "Explain if you can respond to all or parts of the inquiry and what you need in order to respond, if anything."
        }
    },
    "tools": [
                {
            "name": "access_request_agent",
            "function": {
                "description": "Main agent for company employees' access requests."
            },
            "instructions": """
You are the central point of contact for employees of  company who may have requests for you.


Here are the user details that are passed as context:

USER DETAILS:
* User ID = 100
* Name = Gordon Banks
* DataIku ID = 300
* Location = England


TODO - the app should ask user which environment is user requesting access to

The working pipeline is that you should first call the user_verification_tool to verify the user. If the user is not in the database, you should raise an error and tell the user it is not correctly validated.

If the user has been positively validated by the tool, you should proceed with a downstream agent to answer the user request.
            """,
            "tools": [
                "compliance_validation_agent",
                "user_verification_tool"
            ],
            "llm_config": {
                "model_name": "azure-gpt-4o",
                "temperature": 0.3
            }
        },
 {
            "name": "compliance_validation_agent",
            "function": "aaosa_call",
            "instructions": """
{instructions_prefix}
You are the Compliance Validation Agent responsible for ensuring users meet mandatory training and certification requirements before granting system access.

WORKFLOW:
Follow these steps in order for each access request:

1. GATHER REQUIREMENTS
   - If not specified, ask the user to provide:
     * Environment type: DEV, PROD, QA, or CORE++
     * Access type needed: Read, Write, Execute (can be multiple)

2. VERIFY TRAINING REQUIREMENTS
   - Call training_requirements_tool with the specified environment type
   - Extract the required training name from the tool response
   - Note the training URL for potential user guidance

3. VALIDATE TRAINING COMPLETION
   - Ask user for their training completion certificate number
   - Call training_completions_tool with:
     * user_id (from user context)
     * training_name (extracted from step 2)
     * certificate_id (provided by user)
   - If training not completed:
     * Provide the training URL from step 2
     * Inform user they must complete training before access can be granted
     * End process here
   - If training completed successfully, proceed to step 4

4. CHECK ACCESS POLICY COMPLIANCE
   - Call approvals_required_tool with the environment and access_type parameters
   - If the tool returns false (access not approved):
     * Inform user that this type of access cannot be requested for the specified environment
     * Clearly explain that company policy does not permit this access combination
     * End process here - do NOT proceed to approval workflow
   - If the tool returns true (access approved):
     * Proceed to step 5 for approval workflow

5. HANDLE APPROVAL WORKFLOW (MANDATORY STEP)
   - You MUST call the ons_agent function with the user's inquiry about ServiceNow ticket processing
   - Use the ons_agent function call to delegate the ticket verification/creation workflow
   - Pass the complete context about the user's access request to ons_agent
   - Wait for ons_agent's response before proceeding
   - Based on ons_agent's response, either grant access (if ticket approved) or inform user of next steps
   - Do NOT provide generic responses about ticket processing - you must actually call ons_agent

COMMUNICATION GUIDELINES:
- Be clear and professional in all interactions
- Explain each step and why it's necessary
- Provide specific guidance when users need to take action
- If any tool call fails, explain the issue and next steps
- Always confirm user details before proceeding with validation

ERROR HANDLING:
- If any verification step fails, clearly explain the issue
- Provide actionable next steps for resolution
- Do not proceed to subsequent steps if previous validations fail
            """,
            "tools": [
                "training_requirements_tool",
                "training_completions_tool",
                "approvals_required_tool",
                "ons_agent"
            ],
            "llm_config": {
                "model_name": "azure-gpt-4o",
                "temperature": 0.3
            }
        },
        {
            "name": "training_requirements_tool",
            "function": {
                "description": "Return training requirements for a specific environment.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "env": {
                            "type": "string",
                            "description": "Environment type (DEV, QA, PROD, CORE++)"
                        }
                    },
                    "required": ["env"]
                }
            },
            "class": "dataiku.training_requirements_tool.TrainingRequirementsTool"
        },
               {
            "name": "training_completions_tool",
                        "function": {
                "description": "Check if a user completed a training.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "user_id": {"type": "string", "description": "User ID"},
                        "training_name": {"type": "string", "description": "Training name"},
                        "certificate_id": {"type": "string", "description": "Certificate ID"}
                    },
                    "required": ["user_id", "training_name", "certificate_id"]
                }
            },
            "class": "dataiku.training_completions_tool.TrainingCompletionsTool"
        },
        {
            "name": "user_verification_tool",
                        "function": {
                "description": "Verify a user's identity from the users table.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "user_id": {"type": "string", "description": "User ID"},
                        "dataiku_id": {"type": "string", "description": "Dataiku ID"}
                    },
                    "required": ["user_id", "dataiku_id"]
                }
            },
            "class": "dataiku.user_verification_tool.UserVerificationTool"
        },
        {
            "name": "approvals_required_tool",
            "function": {
                "description": "Check if access is permitted based on policies.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "env": {"type": "string", "description": "Environment"},
                        "access_type": {"type": "string", "description": "Access type"}
                    },
                    "required": ["env", "access_type"]
                }
            },
            "class": "dataiku.approvals_required_tool.ApprovalsRequiredTool"
        },
        {
            "name": "ons_agent",
            "function": "aaosa_call",
            "instructions": """
{instructions_prefix}
You are the ONS (ServiceNow) Agent responsible for handling approval ticket verification and creation for access requests.

WORKFLOW:
When called by the compliance validation agent, follow these steps:

1. TICKET INQUIRY
   - Ask the user if they have a ServiceNow (SNOW) ticket number for their access request
   - If they provide a ticket number, proceed to step 2
   - If they don't have a ticket number, proceed to step 3

2. TICKET VERIFICATION (if user has a ticket number)
   - Call ons_ticket_verification_tool with the provided ticket number
   - If verification succeeds:
     * Confirm the ticket is valid and approved
     * Return success status to the calling agent
   - If verification fails:
     * Inform user the ticket number is invalid or not found
     * Ask if they want to create a new ticket (proceed to step 3)

3. TICKET CREATION (if user needs a new ticket)
   - Inform user that a new ServiceNow ticket will be created for their access request
   - Call ons_ticket_creator_tool to generate a new ticket
   - Provide the new ticket number to the user
   - Explain the approval process and estimated timeline
   - Return the ticket status to the calling agent

COMMUNICATION GUIDELINES:
- Be clear about ticket requirements and approval processes
- Provide specific ticket numbers when created
- Explain next steps for approval workflow
- Always return status information to the calling compliance agent

ERROR HANDLING:
- If ticket verification fails, offer to create a new ticket
- If ticket creation fails, escalate to manual process
- Provide clear guidance for manual ticket creation if needed
            """,
            "llm_config": {
                "model_name": "azure-gpt-4o",
                "temperature": 0.3
            },
            "tools": [
                "ons_ticket_verification_tool",
                "ons_ticket_creator_tool"
            ]
        },
                {
            "name": "ons_ticket_verification_tool",
            "function": {
                "description": "Simple validator for ServiceNow ticket numbers.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "ticket_number": {"type": "string", "description": "Ticket number"}
                    },
                    "required": ["ticket_number"]
                }
            },
            "class": "dataiku.ons_ticket_verification_tool.ONSTicketVerificationTool"
        },
                {
            "name": "ons_ticket_creator_tool",
            "function": {
                "description": "Generate a mock ServiceNow ticket number.",
                "parameters": {"type": "object", "properties": {}}
            },
            "class": "dataiku.ons_ticket_creator_tool.ONSTicketCreatorTool"
        },
    ]
}